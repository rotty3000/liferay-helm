# Default values for liferay-helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

################################################################################
#### Commonly used variables ###################################################
################################################################################

config:
  password: test
  requiredPasswordChange: false
  user: test
  mainVirtualHost: main.dxp.docker.localhost

configmap:
  # Annotations to add to the configmap
  annotations: {}
  # Data to add to the configmap

  # By setting this to true all the default configmap entries files will not be
  # emitted and only those defined in 'configmap.data' will be used.
  overrideDefaults: false

  data:
    portal-custom.properties: |
      include-and-override=portal-developer.properties

    # license.xml: |
    #   <license>

# Use this to pass environment variables directly to the DXP container.
# See: https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/
env:
  # Necessary for DXP clustering.
  - name: JDK_JAVA_OPTIONS
    value: "--add-opens=jdk.naming.dns/com.sun.jndi.dns=java.naming"
  - name: LIFERAY_DISABLE_TRIAL_LICENSE
    value: "false"

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  className: ""
  annotations: {}
  hosts:
    - host: "*.dxp.docker.localhost"
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: liferay/dxp
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []

# Setup the amount of storage requests by the DXP PersistentVolumeClaim
storage:
  1Gi

  # Set the number of dxp replicas (0 or more)
# See: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# Additional volumes on the main dxp container
volumes: {}

# Additional volumeMounts on the main dxp container
volumeMounts:
  {}
  # - mountPath: /opt/liferay/deploy/license.xml
  #   name: liferay-file-resources
  #   subPath: license.xml
  #   readOnly: true

#### Setup dependent services

#
# PostgreSQL DB
#
postgres:
  # Configuration values (used with or without the embedded postgres)
  config:
    user: postgres
    password: postgres
    database: lportal
    host: liferay-helm-postgres
    port: 5432
    # JDBC Connection string parameters
    parameters: "useUnicode=true&characterEncoding=UTF-8&useFastDateParsing=false"

  # Configuration for simplified internal Postgres
  # (primarily used for local development)
  internal:
    enabled: true

    # Set the number of postgres replicas (0 or 1 for now)
    replicaCount: 1

    # Set the amount of storage requested by the PersistentVolumeClaim
    storage: 1Gi

    # Set the postgres image to use.
    image:
      repository: postgres
      tag: 16

    # Pass extra environment variables to the main container
    env: {}

#
# Elasticsearch
#
elasticsearch:
  # Configuration values (used with or without the embedded elasticsearch)
  config:
    user: elasticsearch
    password: elasticsearch
    clusterName: liferay_cluster
    host: liferay-helm-elasticsearch
    port: 9200

  # Configuration for simplified internal Elasticsearch
  # (primarily used for local development)
  internal:
    enabled: true

    # Set the number of elasticsearch replicas (0 or 1 for now)
    replicaCount: 1

    # Set the amount of storage requested by the PersistentVolumeClaim
    storage: 1Gi

    # Set the elasticsearch image to use.
    image:
      repository: elasticsearch
      tag: "8.17.0"

    # Pass extra environment variables to the main container
    env: {}

#
# S3 Object storage (MinIO)
#
s3:
  # Configuration values (used with or without the embedded MinIO)
  config:
    user: minio
    password: miniominio
    buckets: doclib
    host: liferay-helm-minio
    region: us-west-1
    scheme: http
    corePoolSize: 3
    connectionTimeout: 20
    httpClientMaxConnections: 10
    httpClientMaxErrorRetry: 3
    pathStyle: true
    ports:
      api: 9000
      console: 9001

  # Configuration for simplified internal MinIO
  # (primarily used for local development)
  internal:
    enabled: true

    # Set the number of minio replicas (0 or 1 for now)
    replicaCount: 1

    # Set the amount of storage requested by the PersistentVolumeClaim
    storage: 1Gi

    # Set the minio image to use.
    image:
      repository: bitnami/minio
      tag: "2024"

    # Pass extra environment variables to the main container
    env: {}

    # This block is for enabling access to the MinIO management console.
    ingress:
      enabled: true
      className: ""
      annotations: {}
      hosts:
        - host: "api.minio.docker.localhost"
          paths:
            - path: /
              pathType: ImplementationSpecific
              backendServicePortName: api
        - host: "console.minio.docker.localhost"
          paths:
            - path: /
              pathType: ImplementationSpecific
              backendServicePortName: console
      tls: []
      #  - secretName: chart-example-tls
      #    hosts:
      #      - chart-example.local

################################################################################
#### Less common fine tuning options ###########################################
################################################################################

# This is for setting the node selection constraints.
# See: https://kubernetes.io/docs/tasks/configure-pod-container/assign-pods-nodes-using-node-affinity/
affinity: {}

# This section is for setting up autoscaling.
# See: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This is the simplest form of no selection constraint.
# See: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
nodeSelector: {}

# This is for setting Kubernetes Annotations to a Pod.
# See: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}

# This is for setting Kubernetes Labels to a Pod.
# See: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

# This is for setting the resource requests and limits of the pods.
# See: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
resources: {}

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 8080
  debugPort: 8000
  clusterPort: 7800

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# Tolerations allow the scheduler to schedule pods with matching taints.
# See: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
tolerations: []
