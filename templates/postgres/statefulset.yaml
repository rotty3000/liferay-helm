{{- if .Values.postgres.enabled }}
{{- with .Values.postgres }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "liferay-helm.fullname" $ }}-postgres
  labels:
    app: {{ $.Chart.Name }}-postgres
    {{- include "liferay-helm.labels" $ | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ $.Chart.Name }}-postgres
      {{- include "liferay-helm.selectorLabels" $ | nindent 6 }}
  serviceName: {{ include "liferay-helm.fullname" $ }}-postgres
  template:
    metadata:
      labels:
        app: {{ $.Chart.Name }}-postgres
        {{- include "liferay-helm.labels" $ | nindent 8 }}
        {{- if .podLabels }}
        {{- with .podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- end }}
    spec:
      containers:
      - name: {{ $.Chart.Name }}-postgres
        env:
          - name: POSTGRES_DB
            value: {{ .config.database }}
          - name: POSTGRES_PASSWORD
            value: {{ .config.password }}
          - name: POSTGRES_USER
            value: {{ .config.user }}
          - name: PGUSER
            value: {{ .config.user }}
          {{- if .env }}
          {{- with .env }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- end }}
        image: {{ printf "%s:%s" (default "postgres" .image.repository) ((default "16" .image.tag) | toString) }}
        imagePullPolicy: {{ $.Values.image.pullPolicy }}
        livenessProbe:
          exec:
            command: ["sh", "-c", "pg_isready", "-U", "$POSTGRES_USER"]
        ports:
        - name: postgres
          containerPort: {{ default "5432" .config.port }}
          protocol: TCP
        {{- if .resources }}
        {{- with .resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- end }}
        readinessProbe:
          exec:
            command: ["sh", "-c", "pg_isready", "-U", "$POSTGRES_USER"]
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: liferay-postgres-pvc
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: liferay-postgres-pvc
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ default "1Gi" .storage}}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $.Chart.Name }}-postgres
  labels:
    app: {{ $.Chart.Name }}-postgres
    {{- include "liferay-helm.labels" $ | nindent 4 }}
spec:
  selector:
    app: {{ $.Chart.Name }}-postgres
    {{- include "liferay-helm.labels" $ | nindent 4 }}
  ports:
  - name: postgres
    port: {{ .config.port }}
    targetPort: postgres
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $.Chart.Name }}-postgres-headless
  labels:
    app: {{ $.Chart.Name }}-postgres
    {{- include "liferay-helm.labels" $ | nindent 4 }}
spec:
  clusterIP: None # This is what makes it headless
  selector:
    app: {{ $.Chart.Name }}-postgres
    {{- include "liferay-helm.labels" $ | nindent 4 }}
  ports:
  - name: postgres
    port: {{ .config.port }}
    targetPort: postgres
    protocol: TCP
{{- end }}
{{- end }}
